use.std::math::ecgfp5::group
use.miden::account
use.miden::note
use.miden::contracts::wallets::basic->wallet

const.NO_OF_CARDS=3
const.COMMUNITY_CARDS_SLOT=116

proc.set_cards
    # => [card_index, Cb, Ca]
    push.0 dup movup.2
    # => [card_index, 0, 0, Cb, Ca]
    exec.account::set_item
    dropw dropw
end

begin 
    dropw
    # store index
    push.0 exec.note::get_inputs drop
    # => [des_pointer]
    loc_store.0

    # card_index
    push.COMMUNITY_CARDS_SLOT loc_store.2

    repeat.NO_OF_CARDS

        loc_load.0 mem_loadw drop drop
        # => [Cb, Ca]
        dup push.0 neq 
        # => [0/1, Cb, Ca]

        if.true
        
            push.1
            while.true
                loc_load.2
                # => [card_index, Cb, Ca]
                dup call.account::get_item drop drop drop
                # => [Ca', Cb, Ca]
                push.0 neq
                # => [0/1, Cb, Ca]
                if.true
                    loc_load.2 add.1 loc_store.2
                    push.1
                else
                    push.0
                end
            end

            loc_load.2
            # => [card_index, Cb, Ca]

            call.set_cards
            # => [...]
            
            # update card_index
            loc_load.2 push.1 add loc_store.2
        end

        loc_load.0 push.1 add
        loc_store.0
    end

    exec.note::get_assets drop mem_loadw
    # => [ASSET, ...]

    # load the asset and add it to the account
    call.wallet::receive_asset
    # => [...]

    dropw
end