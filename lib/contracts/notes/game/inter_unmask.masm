use.std::math::ecgfp5::group
use.miden::account
use.miden::note
use.miden::contracts::wallets::basic->wallet

const.G=7
const.SECRET_KEY_SLOT=53
const.PUBLIC_KEY_SLOT=54
const.MASKING_FACTOR_SLOT=55
const.PLAYER_DATA_SLOT=56
const.SUIT_SIZE=13

proc.inter_unmask
    # => [card_index, ca', cb']
    swap push.G inv
    # => [G_inv, ca', card_index, cb']
    push.MASKING_FACTOR_SLOT exec.account::get_item
    drop drop drop
    # => [r, G_inv, ca', card_index, cb']
    exp
    # => [G_inv^r, ca', card_index, cb']
    mul
    # => [ca, card_index, cb']
    movup.2 push.PUBLIC_KEY_SLOT exec.account::get_item
    drop drop drop
    # => [H, cb', ca, card_index]
    inv push.MASKING_FACTOR_SLOT exec.account::get_item
    drop drop drop
    # => [r, H_inv, cb', ca, card_index]
    exp mul
    # => [cb, ca, card_index]
    push.0 dup movup.4
    # => [card_index, 0, 0, cb, ca]
    exec.account::set_item
    dropw dropw
end

begin 
    dropw
    # store index
    push.0 exec.note::get_inputs drop
    # => [des_pointer]
    loc_store.0

    loc_load.0 push.SUIT_SIZE add
    mem_load
    # => [Ca]
    loc_store.1

    # card_index
    push.1 loc_store.2

    repeat.SUIT_SIZE

        repeat.4
            loc_load.0 mem_load
            # => [cb_1]
            loc_load.1
            # => [Ca, cb_1]
            loc_load.2
            # => [card_index, Ca, cb_1]
            call.inter_unmask
            # => [...]
            loc_load.0 mem_loadw
            # => [cb_4, cb_3, cb_2, cb_1]
            movup.3 drop push.0
            # => [0, cb_4, cb_3, cb_2]
            loc_load.0 mem_storew dropw
            # => [...]
            # update card_index
            loc_load.2 push.1 add loc_store.2
        end

        loc_load.0 push.1 add
        loc_store.0
    end

    exec.note::get_assets drop mem_loadw
    # => [ASSET, ...]

    # load the asset and add it to the account
    call.wallet::receive_asset
    # => [...]

    dropw
end