use.miden::contracts::wallets::basic->basic_wallet
use.miden::contracts::auth::basic->basic_eoa
use.miden::account

const.G=7
const.SECRET_KEY_SLOT=53
const.PUBLIC_KEY_SLOT=54

export.receive_cards
    exec.account::set_item
    # => [R, V]
    # drop the root
    dropw 
end

#! Generates the public key, i.e., a group element H given a random scalar representing the private key.
#! The private key is expected as input and is a random field element.
#!
#! Input: [r, ...]
#! Output: [G^r, ...]
export.gen_privatekey
    push.SECRET_KEY_SLOT exec.account::get_item
    drop drop drop
    # Check that 2 < r. The bound r < p is trivial.
    dup push.2 gt assert
    push.G swap exp
    # => [G^r]

    padw drop push.PUBLIC_KEY_SLOT
    # => [PUBLIC_KEY_SLOT, 0, 0, 0, G^r]
    exec.account::set_item
    dropw dropw
end

export.basic_wallet::receive_asset
export.basic_wallet::send_asset
export.basic_eoa::auth_tx_rpo_falcon512